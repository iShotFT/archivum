name: 'archivum'
services:
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - sabnzbd_config:/config
      - downloads:/downloads
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    restart: unless-stopped
    network_mode: "service:gluetun"

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    container_name: deluge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DELUGE_LOGLEVEL=info
    volumes:
      - deluge_config:/config
      - downloads:/downloads
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    restart: unless-stopped
    network_mode: "service:gluetun"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38081"]
      interval: 30s
      timeout: 10s
      retries: 5

  sonarr:
    image: mdhiggins/sonarr-sma
    hostname: sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - SMA_UPDATE=false # set to true if you want to have SMA updated on container launch
    volumes:
      - sma_config:/usr/local/sma/config
      - sonarr_config:/config
      - downloads:/downloads
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    expose:
      - 38082
    restart: unless-stopped
    networks:
      - archivum
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38082"]
      interval: 30s
      timeout: 10s
      retries: 5

  radarr:
    image: mdhiggins/radarr-sma
    hostname: radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - sma_config:/usr/local/sma/config
      - radarr_config:/config
      - downloads:/downloads
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    expose:
      - 38083
    restart: unless-stopped
    networks:
      - archivum
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:38083"]
      interval: 30s
      timeout: 10s
      retries: 5

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    hostname: prowlarr
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - prowlarr_config:/config
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    expose:
      - 38084
    restart: unless-stopped
    networks:
      - archivum

  overseerr:
    image: sctx/overseerr:latest
    hostname: overseerr
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - PORT=38085
    expose:
      - 38085
    volumes:
      - overseerr_config:/app/config
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    restart: unless-stopped
    networks:
      - archivum
    depends_on:
      deluge:
        condition: service_healthy
      sonarr:
        condition: service_healthy
      radarr:
        condition: service_healthy

  plex:
    image: lscr.io/linuxserver/plex:latest
    hostname: plex
    container_name: plex
    env_file:
      - ./.env
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - plex_config:/config
      - downloads_complete:/downloads_complete
      - hetzner_storage_share:/hetzner-storage
    ports:
      - 32400:32400
    restart: unless-stopped
    networks:
      - archivum

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    hostname: tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - tautulli_config:/config
    expose:
      - 8181
    restart: unless-stopped
    networks:
      - archivum

  homarr:
    image: ghcr.io/ajnart/homarr:latest
    hostname: homarr
    container_name: homarr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - homarr_config:/app/data/configs
      - homarr_icons:/app/public/icons
      - homarr_data:/data
    ports:
      - 7575:7575
    restart: unless-stopped
    networks:
      - archivum

  ddns:
    image: qmcgaw/ddns-updater
    hostname: ddns
    container_name: ddns
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - DATADIR=/updater/data
      - PERIOD=5m
      - UPDATE_COOLDOWN_PERIOD=5m
      - PUBLICIP_FETCHERS=all
      - PUBLICIP_HTTP_PROVIDERS=all
      - PUBLICIPV4_HTTP_PROVIDERS=all
      - PUBLICIPV6_HTTP_PROVIDERS=all
      - PUBLICIP_DNS_PROVIDERS=all
      - PUBLICIP_DNS_TIMEOUT=3s
      - HTTP_TIMEOUT=10s
      - LISTENING_ADDRESS=:8000
      - ROOT_URL=/
      - BACKUP_PERIOD=0
      - BACKUP_DIRECTORY=/updater/data
      - LOG_LEVEL=info
      - LOG_CALLER=hidden
      - SHOUTRRR_ADDRESSES=
    volumes:
      - ddns_config:/updater/data
    expose:
      - 8000
    restart: unless-stopped
    networks:
      - archivum

  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    hostname: proxy
    container_name: proxy
    volumes:
      - proxy_data:/data
      - proxy_letsencrypt:/etc/letsencrypt
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    restart: unless-stopped
    networks:
      - archivum

  gluetun:
    image: qmcgaw/gluetun
    hostname: gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 38080:38080/tcp # nzb
      - 38081:38081/tcp # deluge
      - 6881:6881 # deluge
      - 6881:6881/udp # deluge
    volumes:
      - gluetun_config:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${OPENVPN_PROVIDER}
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_COUNTRIES=Germany
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - UPDATER_PERIOD=24h
    restart: unless-stopped
    networks:
      - archivum

volumes:
  sma_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/sma/config
  gluetun_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/gluetun/config
  sabnzbd_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/sabnzbd/config
  downloads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/downloads
  downloads_complete:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/d/Archivum
  deluge_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/deluge/config
  sonarr_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/sonarr/config
  radarr_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/radarr/config
  plex_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/plex/config
  tautulli_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/tautulli/config
  prowlarr_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/prowlarr/config
  homarr_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/homarr/configs
  homarr_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/homarr/data
  homarr_icons:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/homarr/icons
  ddns_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/ddns/config
  overseerr_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/overseerr/config
  proxy_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/proxy/data
  proxy_letsencrypt:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/storage/proxy/letsencrypt
  hetzner_storage_share:
    driver_opts:
      type: cifs
      o: username=${HETZNER_STORAGE_BOX_USER},password=${HETZNER_STORAGE_BOX_PASSWORD},vers=3.0
      device: "//${HETZNER_STORAGE_BOX_SERVER}/backup"
networks:
  archivum:
    driver: 'bridge'
